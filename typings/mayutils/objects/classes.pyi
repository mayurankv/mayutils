from _typeshed import Incomplete
from typing import Any, Callable, NoReturn

class classonlyproperty:
    func: Incomplete
    def __init__(self, func) -> None: ...
    def __get__(self, instance: object, owner: type) -> Any: ...

class readonlyclassonlyproperty(classonlyproperty):
    def __set__(self, instance: object, value: Any) -> NoReturn: ...

class BaseClass: ...

def add_method(cls, method: Callable, method_name: str = "__post_init__") -> Any: ...
def adopt_super_methods(cls) -> type: ...
