from _typeshed import Incomplete
from google.oauth2.credentials import Credentials
from mayutils.environment.filesystem import get_root as get_root
from mayutils.environment.logging import Logger as Logger
from typing import Callable

logger: Incomplete

def generate_fernet_key() -> str: ...
def get_encryption_key() -> bytes | None: ...
def encrypt_token(token_str: str, encryption_key: bytes | None = None) -> bytes: ...
def decrypt_token(stored_token: bytes, encryption_key: bytes | None = None) -> dict: ...
def save_token(service_name: str, token_str: str, username: str) -> None: ...
def load_token(service_name: str, username: str) -> dict: ...
def oauth_wrapper(oauth_internal: Callable): ...
@oauth_wrapper
def google_oauth(token: dict | None, **kwargs) -> tuple[Credentials, bool]: ...
def reset_service_oauth(service_name: str, username: str = ...) -> None: ...
